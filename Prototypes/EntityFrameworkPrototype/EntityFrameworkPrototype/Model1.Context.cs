//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFrameworkPrototype
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RAEntities : DbContext
    {
        public RAEntities()
            : base("name=RAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public DbSet<Appliance> Appliances { get; set; }
        public DbSet<CrewMember> CrewMembers { get; set; }
        public DbSet<Link_CrewMember_ContactType> Link_CrewMember_ContactType { get; set; }
        public DbSet<Link_CrewMember_Skill> Link_CrewMember_Skill { get; set; }
        public DbSet<Link_CrewMember_Watch> Link_CrewMember_Watch { get; set; }
        public DbSet<LT_ContactType> LT_ContactType { get; set; }
        public DbSet<LT_CrewMemberStatus> LT_CrewMemberStatus { get; set; }
        public DbSet<LT_OfflineHourReason> LT_OfflineHourReason { get; set; }
        public DbSet<LT_UnavailabilityReason> LT_UnavailabilityReason { get; set; }
        public DbSet<OfflineHour> OfflineHours { get; set; }
        public DbSet<Skill> Skills { get; set; }
        public DbSet<Station> Stations { get; set; }
        public DbSet<Unavailability> Unavailabilities { get; set; }
        public DbSet<Watch> Watches { get; set; }
    
        public virtual int Appliance_Create(Nullable<System.Guid> applianceId, string name, Nullable<short> minimumCrewCount, Nullable<short> maximumCrewCount)
        {
            var applianceIdParameter = applianceId.HasValue ?
                new ObjectParameter("applianceId", applianceId) :
                new ObjectParameter("applianceId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var minimumCrewCountParameter = minimumCrewCount.HasValue ?
                new ObjectParameter("minimumCrewCount", minimumCrewCount) :
                new ObjectParameter("minimumCrewCount", typeof(short));
    
            var maximumCrewCountParameter = maximumCrewCount.HasValue ?
                new ObjectParameter("maximumCrewCount", maximumCrewCount) :
                new ObjectParameter("maximumCrewCount", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Appliance_Create", applianceIdParameter, nameParameter, minimumCrewCountParameter, maximumCrewCountParameter);
        }
    
        public virtual ObjectResult<Appliance_Fetch_Result> Appliance_Fetch(Nullable<System.Guid> applianceID)
        {
            var applianceIDParameter = applianceID.HasValue ?
                new ObjectParameter("applianceID", applianceID) :
                new ObjectParameter("applianceID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Appliance_Fetch_Result>("Appliance_Fetch", applianceIDParameter);
        }
    
        public virtual ObjectResult<CrewMembers_FetchByWatchId_Result> CrewMembers_FetchByWatchId(Nullable<System.Guid> watchId)
        {
            var watchIdParameter = watchId.HasValue ?
                new ObjectParameter("watchId", watchId) :
                new ObjectParameter("watchId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrewMembers_FetchByWatchId_Result>("CrewMembers_FetchByWatchId", watchIdParameter);
        }
    }
}
